{"ast":null,"code":"import createAsyncSlice from \"./helper/createAsyncSlice\";\nconst photos = createAsyncSlice({\n  name: \"photos\",\n  initialState: {\n    list: [],\n    pages: 0,\n    infinite: true\n  },\n  reducers: {\n    addPhotos(state, action) {\n      state.list.push(...action.payload);\n      state.pages++;\n      if (action.payload.length === 0) state.infinite = false;\n    }\n  },\n  fetchConfig: function () {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return {\n      url: `https://dogsapi.origamid.dev/json/api/photo/?_page=${page}&_total=3&_user=0`,\n      options: {\n        method: \"GET\",\n        cache: \"no-store\"\n      }\n    };\n  }\n});\nconst {\n  addPhotos\n} = photos.actions;\nexport const fetchPhotos = photos.asyncAction;\nexport const loadNewPhotos = function () {\n  let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  return async dispatch => {\n    const {\n      payload\n    } = await dispatch(fetchPhotos(page));\n    dispatch(addPhotos(payload));\n  };\n};\nexport default photos.reducer;","map":{"version":3,"names":["createAsyncSlice","photos","name","initialState","list","pages","infinite","reducers","addPhotos","state","action","push","payload","length","fetchConfig","page","arguments","undefined","url","options","method","cache","actions","fetchPhotos","asyncAction","loadNewPhotos","dispatch","reducer"],"sources":["/home/samanta/Documentos/react-app/src/store/photos.js"],"sourcesContent":["import createAsyncSlice from \"./helper/createAsyncSlice\";\n\nconst photos = createAsyncSlice({\n  name: \"photos\",\n  initialState: {\n    list: [],\n    pages: 0,\n    infinite: true,\n  },\n  reducers: {\n    addPhotos(state, action) {\n      state.list.push(...action.payload);\n      state.pages++;\n      if (action.payload.length === 0) state.infinite = false;\n    },\n  },\n  fetchConfig: (page = 1) => ({\n    url: `https://dogsapi.origamid.dev/json/api/photo/?_page=${page}&_total=3&_user=0`,\n    options: {\n      method: \"GET\",\n      cache: \"no-store\",\n    },\n  }),\n});\n\nconst { addPhotos } = photos.actions;\n\nexport const fetchPhotos = photos.asyncAction;\n\nexport const loadNewPhotos =\n  (page = 1) =>\n  async (dispatch) => {\n    const { payload } = await dispatch(fetchPhotos(page));\n    dispatch(addPhotos(payload));\n  };\n\nexport default photos.reducer;\n"],"mappings":"AAAA,OAAOA,gBAAgB,MAAM,2BAA2B;AAExD,MAAMC,MAAM,GAAGD,gBAAgB,CAAC;EAC9BE,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACL,IAAI,CAACO,IAAI,CAAC,GAAGD,MAAM,CAACE,OAAO,CAAC;MAClCH,KAAK,CAACJ,KAAK,EAAE;MACb,IAAIK,MAAM,CAACE,OAAO,CAACC,MAAM,KAAK,CAAC,EAAEJ,KAAK,CAACH,QAAQ,GAAG,KAAK;IACzD;EACF,CAAC;EACDQ,WAAW,EAAE,SAAAA,CAAA;IAAA,IAACC,IAAI,GAAAC,SAAA,CAAAH,MAAA,QAAAG,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC;IAAA,OAAM;MAC1BE,GAAG,EAAG,sDAAqDH,IAAK,mBAAkB;MAClFI,OAAO,EAAE;QACPC,MAAM,EAAE,KAAK;QACbC,KAAK,EAAE;MACT;IACF,CAAC;EAAA;AACH,CAAC,CAAC;AAEF,MAAM;EAAEb;AAAU,CAAC,GAAGP,MAAM,CAACqB,OAAO;AAEpC,OAAO,MAAMC,WAAW,GAAGtB,MAAM,CAACuB,WAAW;AAE7C,OAAO,MAAMC,aAAa,GACxB,SAAAA,CAAA;EAAA,IAACV,IAAI,GAAAC,SAAA,CAAAH,MAAA,QAAAG,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC;EAAA,OACT,MAAOU,QAAQ,IAAK;IAClB,MAAM;MAAEd;IAAQ,CAAC,GAAG,MAAMc,QAAQ,CAACH,WAAW,CAACR,IAAI,CAAC,CAAC;IACrDW,QAAQ,CAAClB,SAAS,CAACI,OAAO,CAAC,CAAC;EAC9B,CAAC;AAAA;AAEH,eAAeX,MAAM,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
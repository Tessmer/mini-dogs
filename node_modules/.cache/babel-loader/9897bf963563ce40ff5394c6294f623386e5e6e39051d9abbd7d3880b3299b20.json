{"ast":null,"code":"import { combineReducers } from \"@reduxjs/toolkit\";\nimport createAsyncSlice from \"./helper/createAsyncSlice\";\nconst token = createAsyncSlice({\n  name: \"token\",\n  fetchConfig: user => ({\n    url: \"https://dogsapi.origamid.dev/json/jwt-auth/v1/token\",\n    options: {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }\n  })\n});\nconst user = createAsyncSlice({\n  name: \"user\",\n  fetchConfig: token => ({\n    url: \"https://dogsapi.origamid.dev/json/api/user\",\n    options: {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }\n  })\n});\nconst reducer = combineReducers({\n  token: token.reducer,\n  user: user.reducer\n});\nconst fetchToken = token.asyncAction;\nconst fetchUser = user.asyncAction;\nexport default reducer;\nexport const login = user => async dispatch => {\n  try {\n    const {\n      payload\n    } = await dispatch(fetchToken(user));\n    if (payload.token !== undefined) await dispatch(fetchUser(payload.token));\n  } catch {}\n};","map":{"version":3,"names":["combineReducers","createAsyncSlice","token","name","fetchConfig","user","url","options","method","headers","body","JSON","stringify","Authorization","reducer","fetchToken","asyncAction","fetchUser","login","dispatch","payload","undefined"],"sources":["/home/samanta/Documentos/react-app/src/store/login.js"],"sourcesContent":["import { combineReducers } from \"@reduxjs/toolkit\";\nimport createAsyncSlice from \"./helper/createAsyncSlice\";\n\nconst token = createAsyncSlice({\n  name: \"token\",\n  fetchConfig: (user) => ({\n    url: \"https://dogsapi.origamid.dev/json/jwt-auth/v1/token\",\n    options: {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    },\n  }),\n});\n\nconst user = createAsyncSlice({\n  name: \"user\",\n  fetchConfig: (token) => ({\n    url: \"https://dogsapi.origamid.dev/json/api/user\",\n    options: {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n      },\n    },\n  }),\n});\nconst reducer = combineReducers({ token: token.reducer, user: user.reducer });\n\nconst fetchToken = token.asyncAction;\nconst fetchUser = user.asyncAction;\n\nexport default reducer;\n\nexport const login = (user) => async (dispatch) => {\n  try {\n    const { payload } = await dispatch(fetchToken(user));\n    if (payload.token !== undefined) await dispatch(fetchUser(payload.token));\n  } catch {}\n};\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,gBAAgB,MAAM,2BAA2B;AAExD,MAAMC,KAAK,GAAGD,gBAAgB,CAAC;EAC7BE,IAAI,EAAE,OAAO;EACbC,WAAW,EAAGC,IAAI,KAAM;IACtBC,GAAG,EAAE,qDAAqD;IAC1DC,OAAO,EAAE;MACPC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B;EACF,CAAC;AACH,CAAC,CAAC;AAEF,MAAMA,IAAI,GAAGJ,gBAAgB,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,WAAW,EAAGF,KAAK,KAAM;IACvBI,GAAG,EAAE,4CAA4C;IACjDC,OAAO,EAAE;MACPC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPI,aAAa,EAAE,SAAS,GAAGX;MAC7B;IACF;EACF,CAAC;AACH,CAAC,CAAC;AACF,MAAMY,OAAO,GAAGd,eAAe,CAAC;EAAEE,KAAK,EAAEA,KAAK,CAACY,OAAO;EAAET,IAAI,EAAEA,IAAI,CAACS;AAAQ,CAAC,CAAC;AAE7E,MAAMC,UAAU,GAAGb,KAAK,CAACc,WAAW;AACpC,MAAMC,SAAS,GAAGZ,IAAI,CAACW,WAAW;AAElC,eAAeF,OAAO;AAEtB,OAAO,MAAMI,KAAK,GAAIb,IAAI,IAAK,MAAOc,QAAQ,IAAK;EACjD,IAAI;IACF,MAAM;MAAEC;IAAQ,CAAC,GAAG,MAAMD,QAAQ,CAACJ,UAAU,CAACV,IAAI,CAAC,CAAC;IACpD,IAAIe,OAAO,CAAClB,KAAK,KAAKmB,SAAS,EAAE,MAAMF,QAAQ,CAACF,SAAS,CAACG,OAAO,CAAClB,KAAK,CAAC,CAAC;EAC3E,CAAC,CAAC,MAAM,CAAC;AACX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
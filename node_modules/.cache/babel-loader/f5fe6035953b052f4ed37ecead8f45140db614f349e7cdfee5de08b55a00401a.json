{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst createAsyncSlice = config => {\n  const slice = createSlice({\n    name: config.name,\n    initialState: {\n      loading: false,\n      data: null,\n      error: null,\n      ...config.initialState\n    },\n    reducers: {\n      fetchStarted(state) {\n        state.loading = true;\n      },\n      fetchSuccess(state, action) {\n        state.loading = false;\n        state.data = action.payload;\n        state.error = null;\n      },\n      fetchError(state, action) {\n        state.loading = false;\n        state.data = null;\n        state.error = action.payload;\n      },\n      ...config.reducers\n    }\n  });\n  const {\n    fetchStarted,\n    fetchSuccess,\n    fetchError\n  } = slice.actions;\n  const asyncAction = payload => async dispatch => {\n    try {\n      dispatch(fetchStarted());\n      const {\n        url,\n        options\n      } = config.fetchConfig(payload);\n      const r = await fetch(url, options);\n      const data = await r.json();\n      return dispatch(fetchSuccess(data));\n    } catch (error) {\n      dispatch(fetchError(error.message));\n    }\n    return {\n      ...slice,\n      asyncAction\n    };\n  };\n};\nexport default createAsyncSlice;","map":{"version":3,"names":["createSlice","createAsyncSlice","config","slice","name","initialState","loading","data","error","reducers","fetchStarted","state","fetchSuccess","action","payload","fetchError","actions","asyncAction","dispatch","url","options","fetchConfig","r","fetch","json","message"],"sources":["/home/samanta/Documentos/react-app/src/store/helper/createAsyncSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst createAsyncSlice = (config) => {\n  const slice = createSlice({\n    name: config.name,\n    initialState: {\n      loading: false,\n      data: null,\n      error: null,\n      ...config.initialState,\n    },\n    reducers: {\n      fetchStarted(state) {\n        state.loading = true;\n      },\n      fetchSuccess(state, action) {\n        state.loading = false;\n        state.data = action.payload;\n        state.error = null;\n      },\n      fetchError(state, action) {\n        state.loading = false;\n        state.data = null;\n        state.error = action.payload;\n      },\n      ...config.reducers,\n    },\n  });\n\n  const { fetchStarted, fetchSuccess, fetchError } = slice.actions;\n\n  const asyncAction = (payload) => async (dispatch) => {\n    try {\n      dispatch(fetchStarted());\n      const { url, options } = config.fetchConfig(payload);\n      const r = await fetch(url, options);\n      const data = await r.json();\n      return dispatch(fetchSuccess(data));\n    } catch (error) {\n      dispatch(fetchError(error.message));\n    }\n\n    return { ...slice, asyncAction };\n  };\n};\n\nexport default createAsyncSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;EACnC,MAAMC,KAAK,GAAGH,WAAW,CAAC;IACxBI,IAAI,EAAEF,MAAM,CAACE,IAAI;IACjBC,YAAY,EAAE;MACZC,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE,IAAI;MACX,GAAGN,MAAM,CAACG;IACZ,CAAC;IACDI,QAAQ,EAAE;MACRC,YAAYA,CAACC,KAAK,EAAE;QAClBA,KAAK,CAACL,OAAO,GAAG,IAAI;MACtB,CAAC;MACDM,YAAYA,CAACD,KAAK,EAAEE,MAAM,EAAE;QAC1BF,KAAK,CAACL,OAAO,GAAG,KAAK;QACrBK,KAAK,CAACJ,IAAI,GAAGM,MAAM,CAACC,OAAO;QAC3BH,KAAK,CAACH,KAAK,GAAG,IAAI;MACpB,CAAC;MACDO,UAAUA,CAACJ,KAAK,EAAEE,MAAM,EAAE;QACxBF,KAAK,CAACL,OAAO,GAAG,KAAK;QACrBK,KAAK,CAACJ,IAAI,GAAG,IAAI;QACjBI,KAAK,CAACH,KAAK,GAAGK,MAAM,CAACC,OAAO;MAC9B,CAAC;MACD,GAAGZ,MAAM,CAACO;IACZ;EACF,CAAC,CAAC;EAEF,MAAM;IAAEC,YAAY;IAAEE,YAAY;IAAEG;EAAW,CAAC,GAAGZ,KAAK,CAACa,OAAO;EAEhE,MAAMC,WAAW,GAAIH,OAAO,IAAK,MAAOI,QAAQ,IAAK;IACnD,IAAI;MACFA,QAAQ,CAACR,YAAY,CAAC,CAAC,CAAC;MACxB,MAAM;QAAES,GAAG;QAAEC;MAAQ,CAAC,GAAGlB,MAAM,CAACmB,WAAW,CAACP,OAAO,CAAC;MACpD,MAAMQ,CAAC,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAEC,OAAO,CAAC;MACnC,MAAMb,IAAI,GAAG,MAAMe,CAAC,CAACE,IAAI,CAAC,CAAC;MAC3B,OAAON,QAAQ,CAACN,YAAY,CAACL,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdU,QAAQ,CAACH,UAAU,CAACP,KAAK,CAACiB,OAAO,CAAC,CAAC;IACrC;IAEA,OAAO;MAAE,GAAGtB,KAAK;MAAEc;IAAY,CAAC;EAClC,CAAC;AACH,CAAC;AAED,eAAehB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
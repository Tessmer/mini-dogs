{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport createAsyncSlice from \"./helper/createAsyncSlice\";\nconst token = createAsyncSlice({\n  name: \"token\",\n  fetchConfig: payload => ({\n    url: \"https://dogsapi.origamid.dev/json/jwt-auth/v1/token\",\n    options: {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }\n  })\n});\nconst slice = createSlice({\n  name: \"login\",\n  initialState: {\n    token: {\n      loading: false,\n      data: null,\n      error: null\n    },\n    user: {\n      loading: false,\n      data: null,\n      error: null\n    }\n  },\n  reducers: {\n    fetchTokenStarted(state) {\n      state.token.loading = true;\n    },\n    fetchTokenSuccess(state, action) {\n      state.token.loading = false;\n      state.token.data = action.payload;\n      state.token.error = null;\n    },\n    fetchTokenError(state, action) {\n      state.token.loading = false;\n      state.token.data = null;\n      state.token.error = action.payload;\n    },\n    fetchUserStarted(state) {\n      state.user.loading = true;\n    },\n    fetchUserSuccess(state, action) {\n      state.user.loading = false;\n      state.user.data = action.payload;\n      state.user.error = null;\n    },\n    fetchUserError(state, action) {\n      state.user.loading = false;\n      state.user.data = null;\n      state.user.error = action.payload;\n    }\n  }\n});\nconst {\n  fetchTokenStarted,\n  fetchTokenSuccess,\n  fetchTokenError,\n  fetchUserStarted,\n  fetchUserSuccess,\n  fetchUserError\n} = slice.actions;\nexport const fetchToken = user => async dispatch => {\n  try {\n    dispatch(fetchTokenStarted());\n    const r = await fetch(\"https://dogsapi.origamid.dev/json/jwt-auth/v1/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    const data = await r.json();\n    return dispatch(fetchTokenSuccess(data));\n  } catch (error) {\n    return dispatch(fetchTokenError, error.message);\n  }\n};\nexport const fetchUser = token => async dispatch => {\n  try {\n    dispatch(fetchUserStarted());\n    const r = await fetch(\"https://dogsapi.origamid.dev/json/api/user\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n    const data = await r.json();\n    return dispatch(fetchUserSuccess(data));\n  } catch (error) {\n    return dispatch(fetchUserError, error.message);\n  }\n};\nexport const login = user => async dispatch => {\n  try {\n    const {\n      payload\n    } = await dispatch(fetchToken(user));\n    if (payload.token !== undefined) await dispatch(fetchUser(payload.token));\n  } catch (error) {}\n};\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","createAsyncSlice","token","name","fetchConfig","payload","url","options","method","headers","body","JSON","stringify","user","slice","initialState","loading","data","error","reducers","fetchTokenStarted","state","fetchTokenSuccess","action","fetchTokenError","fetchUserStarted","fetchUserSuccess","fetchUserError","actions","fetchToken","dispatch","r","fetch","json","message","fetchUser","Authorization","login","undefined","reducer"],"sources":["/home/samanta/Documentos/react-app/src/store/login.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport createAsyncSlice from \"./helper/createAsyncSlice\";\n\nconst token = createAsyncSlice({\n  name: \"token\",\n  fetchConfig: (payload) => ({\n    url: \"https://dogsapi.origamid.dev/json/jwt-auth/v1/token\",\n    options: {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    },\n  }),\n});\n\nconst slice = createSlice({\n  name: \"login\",\n  initialState: {\n    token: {\n      loading: false,\n      data: null,\n      error: null,\n    },\n    user: {\n      loading: false,\n      data: null,\n      error: null,\n    },\n  },\n  reducers: {\n    fetchTokenStarted(state) {\n      state.token.loading = true;\n    },\n    fetchTokenSuccess(state, action) {\n      state.token.loading = false;\n      state.token.data = action.payload;\n      state.token.error = null;\n    },\n    fetchTokenError(state, action) {\n      state.token.loading = false;\n      state.token.data = null;\n      state.token.error = action.payload;\n    },\n    fetchUserStarted(state) {\n      state.user.loading = true;\n    },\n    fetchUserSuccess(state, action) {\n      state.user.loading = false;\n      state.user.data = action.payload;\n      state.user.error = null;\n    },\n    fetchUserError(state, action) {\n      state.user.loading = false;\n      state.user.data = null;\n      state.user.error = action.payload;\n    },\n  },\n});\n\nconst {\n  fetchTokenStarted,\n  fetchTokenSuccess,\n  fetchTokenError,\n  fetchUserStarted,\n  fetchUserSuccess,\n  fetchUserError,\n} = slice.actions;\n\nexport const fetchToken = (user) => async (dispatch) => {\n  try {\n    dispatch(fetchTokenStarted());\n    const r = await fetch(\n      \"https://dogsapi.origamid.dev/json/jwt-auth/v1/token\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      }\n    );\n    const data = await r.json();\n    return dispatch(fetchTokenSuccess(data));\n  } catch (error) {\n    return dispatch(fetchTokenError, error.message);\n  }\n};\n\nexport const fetchUser = (token) => async (dispatch) => {\n  try {\n    dispatch(fetchUserStarted());\n    const r = await fetch(\"https://dogsapi.origamid.dev/json/api/user\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n      },\n    });\n    const data = await r.json();\n    return dispatch(fetchUserSuccess(data));\n  } catch (error) {\n    return dispatch(fetchUserError, error.message);\n  }\n};\n\nexport const login = (user) => async (dispatch) => {\n  try {\n    const { payload } = await dispatch(fetchToken(user));\n    if (payload.token !== undefined) await dispatch(fetchUser(payload.token));\n  } catch (error) {}\n};\n\nexport default slice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
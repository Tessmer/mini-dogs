{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst slice = createSlice({\n  name: \"login\",\n  initialState: {\n    loading: false,\n    data: null,\n    error: null\n  },\n  reducers: {\n    fetchStarted(state) {\n      state.loading = true;\n    },\n    fetchSuccess(state, action) {\n      state.loading = false;\n      state.data = action.payload;\n      state.error = null;\n    },\n    fetchError(state, action) {\n      state.loading = false;\n      state.data = null;\n      state.error = action.payload;\n    }\n  }\n});\nconst {\n  fetchStarted,\n  fetchSuccess,\n  fetchError\n} = slice.actions;\nexport const fetchToken = user => async dispatch => {\n  try {\n    dispatch(fetchStarted());\n    const r = await fetch(\"https://dogsapi.origamid.dev/json/jwt-auth/v1/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    const data = await r.json();\n    return dispatch(fetchSuccess(data));\n  } catch (error) {\n    return dispatch(fetchError(error.message));\n  }\n};\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","slice","name","initialState","loading","data","error","reducers","fetchStarted","state","fetchSuccess","action","payload","fetchError","actions","fetchToken","user","dispatch","r","fetch","method","headers","body","JSON","stringify","json","message","reducer"],"sources":["/home/samanta/Documentos/react-app/src/store/login.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n  name: \"login\",\n  initialState: {\n    loading: false,\n    data: null,\n    error: null,\n  },\n  reducers: {\n    fetchStarted(state) {\n      state.loading = true;\n    },\n    fetchSuccess(state, action) {\n      state.loading = false;\n      state.data = action.payload;\n      state.error = null;\n    },\n    fetchError(state, action) {\n      state.loading = false;\n      state.data = null;\n      state.error = action.payload;\n    },\n  },\n});\n\nconst { fetchStarted, fetchSuccess, fetchError } = slice.actions;\n\nexport const fetchToken = (user) => async (dispatch) => {\n  try {\n    dispatch(fetchStarted());\n    const r = await fetch(\n      \"https://dogsapi.origamid.dev/json/jwt-auth/v1/token\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      }\n    );\n    const data = await r.json();\n    return dispatch(fetchSuccess(data));\n  } catch (error) {\n    return dispatch(fetchError(error.message));\n  }\n};\n\nexport default slice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACxBE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,OAAO,EAAE,KAAK;IACdC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAYA,CAACC,KAAK,EAAE;MAClBA,KAAK,CAACL,OAAO,GAAG,IAAI;IACtB,CAAC;IACDM,YAAYA,CAACD,KAAK,EAAEE,MAAM,EAAE;MAC1BF,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACJ,IAAI,GAAGM,MAAM,CAACC,OAAO;MAC3BH,KAAK,CAACH,KAAK,GAAG,IAAI;IACpB,CAAC;IACDO,UAAUA,CAACJ,KAAK,EAAEE,MAAM,EAAE;MACxBF,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACJ,IAAI,GAAG,IAAI;MACjBI,KAAK,CAACH,KAAK,GAAGK,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,MAAM;EAAEJ,YAAY;EAAEE,YAAY;EAAEG;AAAW,CAAC,GAAGZ,KAAK,CAACa,OAAO;AAEhE,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK,MAAOC,QAAQ,IAAK;EACtD,IAAI;IACFA,QAAQ,CAACT,YAAY,CAAC,CAAC,CAAC;IACxB,MAAMU,CAAC,GAAG,MAAMC,KAAK,CACnB,qDAAqD,EACrD;MACEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;IAC3B,CACF,CAAC;IACD,MAAMX,IAAI,GAAG,MAAMa,CAAC,CAACO,IAAI,CAAC,CAAC;IAC3B,OAAOR,QAAQ,CAACP,YAAY,CAACL,IAAI,CAAC,CAAC;EACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOW,QAAQ,CAACJ,UAAU,CAACP,KAAK,CAACoB,OAAO,CAAC,CAAC;EAC5C;AACF,CAAC;AAED,eAAezB,KAAK,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}